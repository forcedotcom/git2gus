<!--
This is your default homepage.
For more information, see:
• https://sailsjs.com/documentation/concepts/views
• https://sailsjs.com/documentation/concepts/routes
-->

<div class="homepage-container">
    <div class="homepage-top-section">
        <div class="homepage-background">
            <div class="homepage-title-logo-container">
                <div class="homepage-title-container">
                    <h1>Git2Gus Application</h1>
                    <h3>It keeps your issues in sync with GUS.</h3>
                </div>
                <img
                    class="homepage-logo"
                    src="/images/logo.svg"
                    alt="git to gus logo"
                />
            </div>
        </div>
        <div class="homepage-background-cloud">
            <a href="#getting-started" class="homepage-getting-started-button"
                >Getting Started</a
            >
        </div>
    </div>
    <div class="homepage-section-container">
        <h2 id="getting-started" class="homepage-section-title">
            Ready to use Git2Gus?
        </h2>
        <p class="homepage-section-subtitle">
            Getting started to use Git2Gus is simple. Go through the following 3
            steps:
        </p>
        <ol>
            <li class="homepage-getting-started-step">
                <img
                    class="homepage-getting-started-step-image"
                    src="/images/install.svg"
                    alt="install"
                />
                <span>
                    <h3 class="homepage-getting-started-step-label">
                        1. Install Git2Gus application
                    </h3>
                    <p class="homepage-getting-started-step-description">
                        Navigate to
                        <a
                            target="_blank"
                            rel="noopener noreferrer"
                            href="https://github.com/apps/git2gus"
                            >https://github.com/apps/git2gus</a
                        >
                        and install the app in you repo.
                    </p>
                </span>
            </li>
            <li class="homepage-getting-started-step">
                <img
                    class="homepage-getting-started-step-image"
                    src="/images/configure.svg"
                    alt="configure"
                />
                <span>
                    <h3 class="homepage-getting-started-step-label">
                        2. Commit the configuration file into your repo.
                    </h3>
                    <p class="homepage-getting-started-step-description">
                        In order to customize your repo for your team you have
                        to commit a configuration file
                        <b>.git2gus/config.json</b> with specific data about
                        your team. e.g.
                    </p>
                    <pre class="homepage-code"><code>
{
    "productTag": "a1aB0000000Jgm7IAC",
    "defaultBuild": "218"
}
                        </code></pre>
                </span>
            </li>
            <li class="homepage-getting-started-step">
                <img
                    class="homepage-getting-started-step-image"
                    src="/images/app.svg"
                    alt="app"
                />
                <span>
                    <h3 class="homepage-getting-started-step-label">
                        3. Enjoy the syncronization.
                    </h3>
                    <p class="homepage-getting-started-step-description">
                        Since the app was installed and the config file is in
                        then the app is going to start reacting to events on the
                        issues.
                    </p>
                </span>
            </li>
        </ol>
    </div>
    <div class="homepage-section-container">
        <h2 class="homepage-section-title">Configuring Git2Gus</h2>
        <ul class="homepage-config-keys-list">
            <li class="homepage-config-keys-item">
                <span class="homepage-badge">productTag</span>
                <span class="homepage-config-key-description">
                    The unique ID of the productTag used by your team in GUS.
                    When a new GUS work item is going to be created this is the
                    id the application is going to use. To see your Product Tags
                    go to the App Launcher in GUS and search "product tags".
                </span>
            </li>
            <li class="homepage-config-keys-item">
                <span class="homepage-badge">defaultBuild</span>
                <span class="homepage-config-key-description">
                    The build number the application is going to use by default
                    when it creates a new GUS work item. Notice this value might
                    need to be changed every release.
                </span>
            </li>
            <li class="homepage-config-keys-item">
                <span class="homepage-badge">statusWhenClosed</span>
                <span class="homepage-config-key-description">
                    It allows to specified the status `INTEGRATE`, `FIXED` or
                    `CLOSED` of the GUS work item when the Github issue gets
                    closed. By default: `INTEGRATE`.
                </span>
            </li>
        </ul>
    </div>
    <div class="homepage-section-container">
        <h2 id="how-it-works" class="homepage-section-title">
            How Git2Gus works?
        </h2>
        <h3 class="homepage-flow-title">
            Creating GUS work items automatically.
        </h3>
        <div class="homepage-flow-step-container">
            <div class="homepage-flow-step">
                <p class="homepage-flow-step-title">
                    1. Add a GUS label to the issue.
                </p>
                <p class="homepage-flow-step-description">
                    When the application gets installed in your repo, a set of
                    labels are added automatically.
                    <b>USER STORY</b>, <b>BUG P0</b>, <b>BUG P1</b>, etc. Adding
                    a label to a Github issue is going to automatically create a
                    GUS work item and keep the new ticket in sync with the
                    Github issue. The <b>USER STORY</b> label will create a User
                    Story work item and the priority labels will create a Bug
                    work item.
                </p>
            </div>
            <img
                class="homepage-flow-step-image"
                src="/images/select-gus-label.svg"
                alt="open issue"
            />
        </div>
        <div class="homepage-flow-step-container">
            <img
                class="homepage-flow-step-image"
                src="/images/create-gus-item.svg"
                alt="open issue"
            />
            <div class="homepage-flow-step">
                <p class="homepage-flow-step-title">2. The new GUS work item</p>
                <p class="homepage-flow-step-description">
                    The new GUS work item is going to be created using the
                    priority, title and description fields specified in the
                    Github issue. Also the <b>FoundInBuild</b> and the
                    <b>ProductTag</b> fields are going to be equal to the values
                    provided in the configuration file.
                </p>
            </div>
        </div>

        <h3 class="homepage-flow-title">
            Link issue with an existing GUS work item.
        </h3>
        <div class="homepage-flow-step-container">
            <img
                class="homepage-flow-step-image"
                src="/images/add-comment-issue.svg"
                alt="open issue"
            />
            <div class="homepage-flow-step">
                <p class="homepage-flow-step-title">
                    1. Add the annotation @W-1234567@ into the issue
                    description.
                </p>
                <p class="homepage-flow-step-description">
                    Add the <b>@W-1234567@</b> annotation in the issue
                    description where <b>W-1234567</b> is the name of the GUS
                    work item you want to link.
                </p>
            </div>
        </div>
        <div class="homepage-flow-step-container">
            <div class="homepage-flow-step">
                <p class="homepage-flow-step-title">
                    2. The Issue and GUS work item are linked.
                </p>
                <p class="homepage-flow-step-description">
                    When an issue gets linked to an existing GUS work item it
                    means that when the issue gets <b>closed</b> the work item
                    in GUS it's going to be closed as well.
                </p>
            </div>
            <img
                class="homepage-flow-step-image"
                src="/images/link-issue-with-gus.svg"
                alt="open issue"
            />
        </div>

        <h3 class="homepage-flow-title">
            Closing GUS work items automatically.
        </h3>
        <div class="homepage-flow-step-container">
            <img
                class="homepage-flow-step-image"
                src="/images/close-issue.svg"
                alt="open issue"
            />
            <div class="homepage-flow-step">
                <p class="homepage-flow-step-title">1. Close an issue.</p>
                <p class="homepage-flow-step-description">
                    Closing Github issues that were linked to GUS work items
                    will trigger that the work item closes automatically.
                </p>
            </div>
        </div>
        <div class="homepage-flow-step-container">
            <div class="homepage-flow-step">
                <p class="homepage-flow-step-title">
                    2. Change GUS status
                </p>
                <p class="homepage-flow-step-description">
                    GUS work items that close automatically are going to have
                    status specified in the config, or 'INTEGRATE' by default
                </p>
            </div>
            <img
                class="homepage-flow-step-image"
                src="/images/integrate-gus-card.png"
                alt="open issue"
            />
        </div>
    </div>
</div>
